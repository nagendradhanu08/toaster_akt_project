{"version":3,"file":"credit-card-format.directive.js","sourceRoot":"","sources":["../../src/directives/credit-card-format.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, ElementRef, HostListener } from '@angular/core';\nimport { CreditCard } from '../shared/credit-card';\n\n@Directive({\n  selector: '[ccNumber]'\n})\n\nexport class CreditCardFormatDirective {\n\n  public target;\n  private cards: Array<any>;\n\n  constructor(private el: ElementRef) {\n    this.target = this.el.nativeElement;\n    this.cards = CreditCard.cards();\n  }\n\n  @HostListener('keypress', ['$event']) onKeypress(e) {\n    if (CreditCard.restrictNumeric(e)) {\n      if (CreditCard.isCardNumber(e.which, this.target)) {\n        this.formatCardNumber(e);\n      }\n    } else {\n      e.preventDefault();\n      return false;\n    }\n\n  }\n  @HostListener('keydown', ['$event']) onKeydown(e) {\n    this.formatBackCardNumber(e);\n  }\n  @HostListener('keyup', ['$event']) onKeyup(e) {\n    this.setCardType(e);\n  }\n  @HostListener('paste', ['$event']) onPaste(e) {\n    this.reFormatCardNumber(e);\n  }\n  @HostListener('change', ['$event']) onChange(e) {\n    this.reFormatCardNumber(e);\n  }\n  @HostListener('input', ['$event']) onInput(e) {\n    this.reFormatCardNumber(e);\n    this.setCardType(e);\n  }\n\n  private formatCardNumber(e) {\n    let card,\n        digit,\n        length,\n        re,\n        upperLength,\n        value;\n\n    digit = String.fromCharCode(e.which);\n    if (!/^\\d+$/.test(digit)) {\n      return;\n    }\n\n    value = this.target.value;\n\n    card = CreditCard.cardFromNumber(value + digit);\n\n    length = (value.replace(/\\D/g, '') + digit).length;\n\n    upperLength = 16;\n\n    if (card) {\n      upperLength = card.length[card.length.length - 1];\n    }\n\n    if (length >= upperLength) {\n      return;\n    }\n\n    if ((this.target.selectionStart != null) && this.target.selectionStart !== value.length) {\n      // return;\n    }\n\n    if (card && card.type === 'amex') {\n      re = /^(\\d{4}|\\d{4}\\s\\d{6})$/;\n    } else {\n      re = /(?:^|\\s)(\\d{4})$/;\n    }\n\n    if (re.test(value)) {\n      e.preventDefault();\n      setTimeout(() => {\n        this.target.value = `${value} ${digit}`;\n      });\n    } else if (re.test(value + digit)) {\n      e.preventDefault();\n      setTimeout(() => {\n        this.target.value = `${value}${digit} `;\n      });\n    }\n  }\n\n  private formatBackCardNumber(e) {\n    let value = this.target.value;\n\n    if (e.which !== 8) {\n      return;\n    }\n\n    if ((this.target.selectionStart != null) && this.target.selectionStart !== value.length) {\n      // return;\n    }\n\n    if (/\\d\\s$/.test(value)) {\n      e.preventDefault();\n      setTimeout(() => {\n        this.target.value = value.replace(/\\d\\s$/, '');\n      });\n    } else if (/\\s\\d?$/.test(value)) {\n      e.preventDefault();\n      setTimeout(() => {\n        this.target.value = value.replace(/\\d$/, '');\n      });\n    }\n}\n\n  private setCardType(e) {\n    let card,\n        val      = this.target.value,\n        cardType = CreditCard.cardType(val) || 'unknown';\n\n    if (!this.target.classList.contains(cardType)) {\n\n      for (let i = 0, len = this.cards.length; i < len; i++) {\n        card = this.cards[i];\n        this.target.classList.remove(card.type);\n      }\n\n      this.target.classList.remove('unknown');\n      this.target.classList.add(cardType);\n      this.target.classList.toggle('identified', cardType !== 'unknown');\n    }\n  }\n\n  private reFormatCardNumber(e) {\n    setTimeout(() => {\n      let val = CreditCard.replaceFullWidthChars(this.target.value);\n      val = CreditCard.formatCardNumber(val);\n      this.target.selectionStart = this.target.selectionEnd = CreditCard.safeVal(val, this.target);\n    });\n  }\n\n}\n"]}