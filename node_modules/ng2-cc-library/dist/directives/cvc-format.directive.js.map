{"version":3,"file":"cvc-format.directive.js","sourceRoot":"","sources":["../../src/directives/cvc-format.directive.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAoD,eAAe,CAAC,CAAA;AACpE,4BAA2B,uBAAuB,CAAC,CAAA;AAMnD;IAIE,4BAAoB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;QAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;IACtC,CAAC;IAEqC,uCAAU,GAAV,UAAW,CAAC;QAChD,EAAE,CAAC,CAAC,CAAC,wBAAU,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,wBAAU,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACpF,CAAC,CAAC,cAAc,EAAE,CAAC;QACrB,CAAC;IACH,CAAC;IACkC,oCAAO,GAAP,UAAQ,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;IACrB,CAAC;IACmC,qCAAQ,GAAR,UAAS,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;IACrB,CAAC;IACkC,oCAAO,GAAP,UAAQ,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;IACrB,CAAC;IAGO,wCAAW,GAAnB,UAAoB,CAAC;QAArB,iBAMC;QALC,UAAU,CAAC;YACT,IAAI,GAAG,GAAG,wBAAU,CAAC,qBAAqB,CAAC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC9D,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACzC,KAAI,CAAC,MAAM,CAAC,cAAc,GAAG,KAAI,CAAC,MAAM,CAAC,YAAY,GAAG,wBAAU,CAAC,OAAO,CAAC,GAAG,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;QAC/F,CAAC,CAAC,CAAC;IACL,CAAC;IAtBD;QAAC,mBAAY,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;wDAAA;IAKrC;QAAC,mBAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;qDAAA;IAGlC;QAAC,mBAAY,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;sDAAA;IAGnC;QAAC,mBAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;qDAAA;IAvBpC;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,SAAS;SACpB,CAAC;;0BAAA;IAkCF,yBAAC;AAAD,CAAC,AAhCD,IAgCC;AAhCY,0BAAkB,qBAgC9B,CAAA","sourcesContent":["import { Directive, ElementRef, HostListener } from '@angular/core';\nimport { CreditCard } from '../shared/credit-card';\n\n@Directive({\n  selector: '[ccCVC]'\n})\n\nexport class CvcFormatDirective {\n\n  public target;\n\n  constructor(private el: ElementRef) {\n    this.target = this.el.nativeElement;\n  }\n\n  @HostListener('keypress', ['$event']) onKeypress(e) {\n    if (!CreditCard.restrictNumeric(e) && !CreditCard.restrictCvc(e.which, this.target)) {\n      e.preventDefault();\n    }\n  }\n  @HostListener('paste', ['$event']) onPaste(e) {\n    this.reformatCvc(e)\n  }\n  @HostListener('change', ['$event']) onChange(e) {\n    this.reformatCvc(e)\n  }\n  @HostListener('input', ['$event']) onInput(e) {\n    this.reformatCvc(e)\n  }\n\n\n  private reformatCvc(e) {\n    setTimeout(() => {\n      let val = CreditCard.replaceFullWidthChars(this.target.value);\n      val = val.replace(/\\D/g, '').slice(0, 4);\n      this.target.selectionStart = this.target.selectionEnd = CreditCard.safeVal(val, this.target);\n    });\n  }\n\n}\n"]}