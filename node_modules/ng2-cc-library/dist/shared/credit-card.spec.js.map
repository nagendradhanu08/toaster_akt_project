{"version":3,"file":"credit-card.spec.js","sourceRoot":"","sources":["../../src/shared/credit-card.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { CreditCard } from '../shared/credit-card';\n\ndescribe('Shared: Credit Card', () => {\n\n  beforeEach(() => {\n  });\n\n  it('should return a card object by number', () => {\n    let number = '4111111111111111';\n\n    expect(CreditCard.cardFromNumber(number)).toEqual({\n      type: 'visa',\n      patterns: [4],\n      format: /(\\d{1,4})/g,\n      length: [13, 16],\n      cvvLength: [3],\n      luhn: true\n    });\n  });\n\n  it('should restrict numeric', () => {\n    let valid = {\n      which: 49 // key press 1\n    };\n    let metaKey = {\n      metaKey: true\n    };\n    let invalid = {\n      which: 32\n    };\n    expect(CreditCard.restrictNumeric(valid)).toBe(true);\n    expect(CreditCard.restrictNumeric(metaKey)).toBe(true);\n    expect(CreditCard.restrictNumeric(invalid)).toBe(false);\n  });\n\n  it('should determine text selected', () => {\n    let target = {\n      selectionStart: 1,\n      selectionEnd: 2\n    };\n    expect(CreditCard.hasTextSelected(target)).toBe(true);\n\n    target.selectionStart = null;\n    expect(CreditCard.hasTextSelected(target)).toBe(false);\n\n    target.selectionStart = 1;\n    target.selectionEnd   = 1;\n    expect(CreditCard.hasTextSelected(target)).toBe(false);\n  });\n\n  it('should return card type', () => {\n    expect(CreditCard.cardType(false)).toBe(false);\n\n    let num = '4111111111111111';\n\n    expect(CreditCard.cardType(num)).toBe('visa');\n  });\n\n  it('should format a card number', () => {\n    let number = '4111111111111111';\n\n    expect(CreditCard.formatCardNumber(number)).toBe('4111 1111 1111 1111');\n  });\n\n  it('should return a safe value', () => {\n    let value = '';\n    let target: any = {\n      selectionStart: 1,\n      selectionEnd: 2\n    };\n\n    expect(CreditCard.safeVal(value, target)).toBe(false);\n\n\n    let element = document.createElement('input');\n    document.body.appendChild(element);\n    element.focus();\n\n    target = element;\n    target.selectionStart = 1;\n    target.value = '4111111111111111';\n\n    expect(CreditCard.safeVal(target.value, target)).toBe(16);\n\n  });\n\n  it('should restrict card number', () => {\n    let key = 49;\n    let target = {\n      selectionStart: null,\n      value: '411111111111111'\n    };\n\n    expect(CreditCard.isCardNumber(key, target)).toBe(true);\n\n    target.value = '41111111111111111';\n    expect(CreditCard.isCardNumber(key, target)).toBe(false);\n\n  });\n\n  it('should restrict expiry', () => {\n    let key = 1;\n    let target = {\n      selectionStart: null,\n      value: '12 / 12'\n    };\n\n    expect(CreditCard.restrictExpiry(key, target)).toBe(false);\n\n    key = 49;\n    expect(CreditCard.restrictExpiry(key, target)).toBe(false);\n\n    target.value = '12 / 1234';\n    expect(CreditCard.restrictExpiry(key, target)).toBe(true);\n\n  });\n\n  it('should replace full width characters', () => {\n    expect(CreditCard.replaceFullWidthChars(null)).toBe('');\n\n    let str = '０１２３４５６７８９';\n    expect(CreditCard.replaceFullWidthChars(str)).toBe('0123456789');\n  });\n\n  it('should format expiration date', () => {\n    expect(CreditCard.formatExpiry('1234')).toBe('12 / 34');\n\n    expect(CreditCard.formatExpiry('123456')).toBe('12 / 3456');\n  });\n\n  it('should restrict CVV', () => {\n    let key = 1;\n    let target = {\n      selectionStart: null,\n      value: '123'\n    };\n\n    expect(CreditCard.restrictCvc(key, target)).toBe(false);\n\n    key = 49;\n    expect(CreditCard.restrictCvc(key, target)).toBe(true);\n\n    target.value = '1234';\n    expect(CreditCard.restrictCvc(key, target)).toBe(false);\n\n  });\n\n  it('should check for luhn value', () => {\n    expect(CreditCard.luhnCheck('4111111111111111')).toBe(true);\n\n    expect(CreditCard.luhnCheck('4511111111111111')).toBe(false);\n  });\n});\n\n"]}